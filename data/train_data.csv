question,cypher,expected_output
What shipments does Carol Lee have?,"MATCH (s:Shipment)-[:BELONGS_TO]->(c:Customer {name: 'Carol Lee'}) RETURN s.tracking_number, s.status","[{'s.tracking_number': '4002', 's.status': 'In Transit'}, {'s.tracking_number': '2724', 's.status': 'Pending Dispatch'}, {'s.tracking_number': '9101', 's.status': 'Pending Dispatch'}]"
What's the contact info for Bob Johnson's shipment 4009?,"MATCH (s:Shipment {tracking_number: '4009'})-[:BELONGS_TO]->(c:Customer {name: 'Bob Johnson'}) RETURN c.email, c.phone","[{'c.email': None, 'c.phone': None}]"
Show all SwiftExpress shipments to Atlanta,"MATCH (s:Shipment)-[:ASSIGNED_TO]->(:Courier {name: 'SwiftExpress'}), (s)-[:DELIVERED_TO]->(:Location {name: 'Atlanta'}) RETURN s.tracking_number","[{'s.tracking_number': '4002'}, {'s.tracking_number': '2724'}]"
List all locations that shipments are going to from New York,MATCH (s:Shipment)-[:DISPATCHED_FROM]->(:Location {name: 'New York'}) RETURN DISTINCT s.delivery_location,[{'s.delivery_location': None}]
When will Mona Patel's 4019 shipment arrive?,MATCH (s:Shipment {tracking_number: '4019'})-[:BELONGS_TO]->(c:Customer {name: 'Mona Patel'}) RETURN s.expected_delivery_date,[{'s.expected_delivery_date': '2024-06-08'}]
List ParcelPro shipments with delivery dates in May 2024,MATCH (s:Shipment)-[:ASSIGNED_TO]->(:Courier {name: 'ParcelPro'}) WHERE s.delivery_date STARTS WITH '2024-05' RETURN s.tracking_number,[]
Show customers with both delivered and pending shipments,"MATCH (s:Shipment) WITH s.customer AS customer, COLLECT(DISTINCT s.status) AS statuses WHERE size(statuses) > 1 RETURN customer",[{'customer': None}]
List FastShip deliveries to Miami,"MATCH (s:Shipment)-[:ASSIGNED_TO]->(c:Courier {name: 'FastShip'}), (s)-[:DELIVERED_TO]->(l:Location {name: 'Miami'}) RETURN s.tracking_number, s.delivery_date","[{'s.tracking_number': '1121', 's.delivery_date': None}]"
"List shipments expected to arrive after June 1, 2024",MATCH (s:Shipment) WHERE s.expected_delivery_date > '2024-06-01' RETURN s.tracking_number,"[{'s.tracking_number': '2595'}, {'s.tracking_number': '1072'}, {'s.tracking_number': '7731'}, {'s.tracking_number': '9897'}, {'s.tracking_number': '4000'}, {'s.tracking_number': '4003'}, {'s.tracking_number': '4006'}, {'s.tracking_number': '4007'}, {'s.tracking_number': '4009'}, {'s.tracking_number': '4019'}]"
"List shipments dispatched between May 25-31, 2024","MATCH (s:Shipment) WHERE s.dispatch_date >= '2024-05-25' AND s.dispatch_date <= '2024-05-31' RETURN s.tracking_number, s.dispatch_location","[{'s.tracking_number': '1234', 's.dispatch_location': None}, {'s.tracking_number': '1121', 's.dispatch_location': None}, {'s.tracking_number': '4003', 's.dispatch_location': None}, {'s.tracking_number': '4006', 's.dispatch_location': None}, {'s.tracking_number': '4009', 's.dispatch_location': None}, {'s.tracking_number': '4011', 's.dispatch_location': None}, {'s.tracking_number': '4012', 's.dispatch_location': None}]"
Show customers with pending shipments,MATCH (s:Shipment {status: 'Pending Dispatch'}) RETURN DISTINCT s.customer,[{'s.customer': None}]
Which San Francisco shipments haven't been dispatched?,MATCH (s:Shipment)-[:DISPATCHED_FROM]->(l:Location {name: 'San Francisco'}) WHERE s.status = 'Pending Dispatch' RETURN s.tracking_number,"[{'s.tracking_number': '4008'}, {'s.tracking_number': '7107'}, {'s.tracking_number': '9101'}]"
Was shipment 4019 delivered on time?,MATCH (s:Shipment {tracking_number: '4019'}) RETURN s.delivery_date <= s.expected_delivery_date AS on_time,[{'on_time': True}]
Find shipments going from Miami to Boston,"MATCH (s:Shipment)-[:DISPATCHED_FROM]->(:Location {name: 'Miami'}), (s)-[:DELIVERED_TO]->(:Location {name: 'Boston'}) RETURN s.tracking_number",[]
Find shipments delivered on weekends,"MATCH (s:Shipment) WHERE s.delivery_date IS NOT NULL AND apoc.date.format(apoc.date.parse(s.delivery_date, 'ms', 'yyyy-MM-dd'), 'ms', 'EEEE') IN ['Saturday', 'Sunday'] RETURN s.tracking_number","['Error: {code: Neo.ClientError.Statement.SyntaxError} {message: Unknown function \'apoc.date.format\' (line 1, column 58 (offset: 57))\n""MATCH (s:Shipment) WHERE s.delivery_date IS NOT NULL AND apoc.date.format(apoc.date.parse(s.delivery_date, \'ms\', \'yyyy-MM-dd\'), \'ms\', \'EEEE\') IN [\'Saturday\', \'Sunday\'] RETURN s.tracking_number""\n                                                          ^}']"
How many QuickMove shipments are pending?,MATCH (s:Shipment)-[:ASSIGNED_TO]->(c:Courier {name: 'QuickMove'}) WHERE s.status = 'Pending Dispatch' RETURN count(s) AS pending_count,[{'pending_count': 2}]
When was shipment 4000 delivered?,MATCH (s:Shipment {tracking_number: '4000'}) RETURN s.delivery_date AS delivery_date,[{'delivery_date': '2024-06-02'}]
Which customers have shipments from San Francisco?,MATCH (s:Shipment)-[:DISPATCHED_FROM]->(:Location {name: 'San Francisco'}) RETURN DISTINCT s.customer,[{'s.customer': None}]
What's the oldest undelivered shipment?,MATCH (s:Shipment) WHERE s.status <> 'Delivered' RETURN s.tracking_number ORDER BY s.dispatch_date ASC LIMIT 1,[{'s.tracking_number': '4001'}]
Show customers with shipments handled by multiple couriers,"MATCH (s:Shipment) WITH s.customer AS customer, COUNT(DISTINCT s.courier) AS couriers WHERE couriers > 1 RETURN customer",[]
Show most common shipment routes,"MATCH (s:Shipment) RETURN s.dispatch_location + ' â†’ ' + s.delivery_location AS route, COUNT(*) AS frequency ORDER BY frequency DESC LIMIT 5","[{'route': None, 'frequency': 34}]"
Who's handling shipment 4014?,MATCH (s:Shipment {tracking_number: '4014'})-[:ASSIGNED_TO]->(c:Courier) RETURN c.name,[{'c.name': 'ParcelPro'}]
List shipments with duplicate tracking numbers,"MATCH (s:Shipment) WITH s.tracking_number AS tn, COUNT(*) AS count WHERE count > 1 RETURN tn",[]
Where is shipment 4003 coming from and going to?,"MATCH (s:Shipment {tracking_number: '4003'})-[:DISPATCHED_FROM]->(d:Location), (s)-[:DELIVERED_TO]->(del:Location) RETURN d.name AS origin, del.name AS destination","[{'origin': 'Denver', 'destination': 'Philadelphia'}]"
Show average delivery time for FastShip,"MATCH (s:Shipment)-[:ASSIGNED_TO]->(:Courier {name: 'FastShip'}) WHERE s.delivery_date IS NOT NULL RETURN avg(duration.between(date(s.dispatch_date), date(s.delivery_date)).days) AS avg_days",[{'avg_days': 3.75}]
Show all Denver to Philadelphia shipments,"MATCH (s:Shipment)-[:DISPATCHED_FROM]->(d:Location {name: 'Denver'}), (s)-[:DELIVERED_TO]->(del:Location {name: 'Philadelphia'}) RETURN s.tracking_number",[{'s.tracking_number': '4003'}]
Which shipments did SwiftExpress deliver early?,MATCH (s:Shipment)-[:ASSIGNED_TO]->(c:Courier {name: 'SwiftExpress'}) WHERE s.delivery_date < s.expected_delivery_date RETURN s.tracking_number,"[{'s.tracking_number': '4019'}, {'s.tracking_number': '4011'}, {'s.tracking_number': '4000'}]"
Show all routes from Minneapolis,"MATCH (s:Shipment)-[:DISPATCHED_FROM]->(d:Location {name: 'Minneapolis'}) RETURN DISTINCT d.name AS origin, s.delivery_location AS destination","[{'origin': 'Minneapolis', 'destination': None}]"
